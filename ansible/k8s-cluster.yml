- name: Install and setup Kubernetes Clusters
  hosts: all
  become: yes
  tasks:
    - fail:
       msg: "OS should be Ubuntu 22.04, not {{ ansible_distribution }} {{ ansible_distribution_version }}"
      when: ansible_distribution != 'Ubuntu' or ansible_distribution_version != '22.04'

    - name: update APT packages
      apt:
        update_cache: yes

    - name: disable SWAP (Kubeadm requirement)
      shell: |
        swapoff -a

    - name: disable SWAP in fstab (Kubeadm requirement)
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker.io
        - apt-transport-https
        - ca-certificates
        - git
        - wget
      become: yes

    - name: Restart and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes
      become: yes

    - name: Add user 'ubuntu' to the 'docker' group
      user:
        name: ubuntu
        groups: docker
      become: yes

    - name: Configure kernel parameters for Kubernetes
      sysctl:
        name: "{{ item }}"
        value: "1"
        sysctl_set: yes
        sysctl_file: "k8s.conf"
      loop:
        - net.bridge.bridge-nf-call-ip6tables
        - net.bridge.bridge-nf-call-iptables
      become: yes


    - name: apply sysctl params without reboot
      command: sysctl --system

    - name: install APT Transport HTTPS
      apt:
        name: apt-transport-https
        state: present

    - name: add Docker apt-key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add Kubernetes apt-key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: add Kubernetes' APT repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: 'kubernetes'


    - name: install Kubelet
      apt:
        name: kubelet=1.28.*
        state: present
        update_cache: true

    - name: install Kubeadm
      apt:
        name: kubeadm=1.28.*
        state: present

    - name: enable the Kubelet service, and enable it persistently
      service:
        name: kubelet
        enabled: yes

    - name: Mark Kubernetes packages on hold
      apt:
        name: "{{ item }}"
        state: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl
      become: yes
